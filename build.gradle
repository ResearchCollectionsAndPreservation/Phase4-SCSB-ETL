buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
        set('springCloudVersion', "Hoxton.SR5")
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.3.2"
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id "org.sonarqube" version "2.8"
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
// apply plugin: 'net.saliman.cobertura'
apply plugin: 'jacoco'

sonarqube {
    properties {
        property "systemProp.sonar.host.url", "http://174.129.129.28:9000"
        property "systemProp.sonar.jdbc.url", "jdbc:mysql://scsb-mysql:3306/sonar"
        property "systemProp.sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.projectName", "scsb-etl"
        property "systemProp.sonar.jdbc.username", "sonar"
        property "systemProp.sonar.jdbc.password", "sonar"
    }
}

//added to accept systemproperties while executing gradlew test cmd
test {
    systemProperties = System.properties
}

jar {
    archiveBaseName = 'phase4-scsb-etl'
    archiveVersion = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    mavenCentral()
}


dependencies {
    /*implementation('org.recap:phase4-scsb-common:1.0') {
		version {
			branch = 'development'
		}
	}*/
    compile fileTree(dir: '/data/commonjar', include: '*1.2.jar')
    implementation('org.apache.camel.springboot:camel-spring-boot-starter:3.2.0')
    implementation('org.apache.camel.springboot:camel-spring-boot-dependencies:3.2.0')
    implementation('org.apache.camel:camel-activemq:3.2.0')
    implementation('org.apache.camel:camel-ftp:3.2.0')
    implementation('org.apache.camel:camel-csv:3.2.0')
    implementation('org.apache.camel:camel-bindy:3.2.0')
    implementation('org.apache.camel:camel-mail:3.2.0')
    implementation('org.apache.camel:camel-stream:3.2.0')
    implementation('org.apache.camel:camel-jaxb:3.2.0')
    implementation('org.apache.camel:camel-zipfile:3.2.0')
    implementation('org.apache.camel:camel-jms:3.2.0')

    implementation('org.apache.commons:commons-csv:1.8')
    implementation('org.apache.commons:commons-lang3:3.10')

    implementation('org.apache.activemq:activemq-camel:5.15.12')
    implementation('org.apache.activemq:activemq-pool:5.15.12')
    implementation('org.apache.activemq:activemq-broker:5.15.12')
    implementation('org.apache.activemq:activemq-client:5.15.12')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web-services')

    implementation('com.google.guava:guava:29.0-jre')
    implementation('commons-io:commons-io:2.6')
    implementation('commons-beanutils:commons-beanutils:1.9.4')
    implementation('info.freelibrary:freelib-marc4j:2.6.12')
    implementation('javax.validation:validation-api:2.0.1.Final')


    implementation 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation('mysql:mysql-connector-java')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('org.codehaus.jettison:jettison:1.4.1')

    implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'net.logstash.logback:logstash-logback-encoder:6.4'

    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    implementation 'org.json:json:20200518'
    implementation 'com.google.code.gson:gson:2.8.6'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

/*cobertura {
    coverageFormats = ['xml', 'html']
}*/

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled = true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

task scsbEtlJavadocs(type: Javadoc) {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.addStringOption('Xdoclint:none', '-quiet')
    String home = System.getProperty("user.home")
    destinationDir = new File(home + "/scsb-javadocs/scsb-etl")
}

bootJar {
    layered()
}
