#Database information
#spring.datasouce.url=
#spring.datasource.username=
#spring.datasource.password=

#datasource.primary.url=
#datasource.primary.username=
#datasource.primary.password=
#datasource.primary.driver-class-name=com.mysql.cj.jdbc.Dri
#datasource.secondary.url=
#datasource.secondary.username=
#datasource.secondary.password=
#datasource.secondary.driverss-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

#Logging Settings
#logging.file.name=

#Tomcat Port
server.port=9094

spring.jpa.properties.hibernate.generate_statistics=false

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#Etl Data Load Inputs
#etl.data.load.directory=
#etl.report.directory=
#etl.data.dump.directory
#etl.dump.report.directory=
#etl.dump.staging.directory=
#etl.load.batchSize=500
#etl.pool.size=100
#etl.max.pool.size=100
#etl.jms.component.name=
#etl.jms.component.url=
#etl.split.xml.tag.name=bibRecord

#Ftp Data to Upload File
#ftp.server.privateKey
#ftp.server.knownHost=
#ftp.server.userName=
#s3.etl.remote.server=
#s3.data.dump.dir=
#s3.datadump.report.remote.server=

#etl.data.dump.fetchtype.full = 10
#data.dump.httpresponse.record.limit=100
#data.dump.batch.size = 10000
#data.dump.records.per.file = 50000
#datadump.solr.fetch.delay = 10000
#etl.data.dump.incremental.date.limit =
#etl.data.dump.deleted.type.onlyorphan.institution=
#recap.assist.email.to =

#smtpServer.data.dump.username = ${email.smtp.server.username}
#smtpServer.data.dump.password.file = ${email.smtp.server.password.file}
#email.data.dump.from = ${email.smtp.server.address.from}
#email.data.dump.subject =
#email.data.dump.nodata.subject =
#smtpServer = ${email.smtp.server}

#data.dump.notification.cc=

recap.timezone = EST

#ActiveMQ
#activemq.broker.url=
#activemq.jmx.service.url=

#Solrclient
#scsb.solr.doc.url=

#Spring Configuration to keep mysql connection alive when application idle.
#spring.datasource.test-while-idle=true
#spring.datasource.test-on-borrow=true
#spring.datasource.validation-query=SELECT 1
#spring.datasource.time-between-eviction-runs-millis=5000
#spring.datasource.min-evictable-idle-time-millis=60000

#scsb-api-key
#scsb.swagger.api.key=
#scsb.encryption.secretkey=

#adding for monitoring
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
sonar.coverage.exclusions=org.recap.service.formatter.datadump/*.java

#etl.export.s3.failurereport.directory=

#spring.rabbitmq.host=
#spring.rabbitmq.port=
#spring.rabbitmq.username=
#spring.rabbitmq.password=

#Swagger-Description Properties with default values
#swagger.values.imsDepositoryCodes=
#swagger.values.requestingInstitutionCode=
#swagger.values.institutionCodes=
